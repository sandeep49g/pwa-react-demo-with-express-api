[{"C:\\Sandeep\\sapient_workspace\\pwa-react-demo1\\src\\index.js":"1","C:\\Sandeep\\sapient_workspace\\pwa-react-demo1\\src\\App.js":"2","C:\\Sandeep\\sapient_workspace\\pwa-react-demo1\\src\\api\\fetchWeather.js":"3","C:\\Sandeep\\sapient_workspace\\pwa-react-demo-with-express-api\\src\\index.js":"4","C:\\Sandeep\\sapient_workspace\\pwa-react-demo-with-express-api\\src\\App.js":"5","C:\\Sandeep\\sapient_workspace\\pwa-react-demo-with-express-api\\src\\components\\About.js":"6","C:\\Sandeep\\sapient_workspace\\pwa-react-demo-with-express-api\\src\\components\\Home.js":"7","C:\\Sandeep\\sapient_workspace\\pwa-react-demo-with-express-api\\src\\components\\Users.js":"8"},{"size":150,"mtime":1612454117690,"results":"9","hashOfConfig":"10"},{"size":1988,"mtime":1612530242119,"results":"11","hashOfConfig":"10"},{"size":387,"mtime":1612352092883,"results":"12","hashOfConfig":"10"},{"size":192,"mtime":1612709964744,"results":"13","hashOfConfig":"14"},{"size":2348,"mtime":1612731033455,"results":"15","hashOfConfig":"14"},{"size":169,"mtime":1612730825449,"results":"16","hashOfConfig":"14"},{"size":167,"mtime":1612730836858,"results":"17","hashOfConfig":"14"},{"size":2174,"mtime":1612730745353,"results":"18","hashOfConfig":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"1p0sspu",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"505fxf",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},"C:\\Sandeep\\sapient_workspace\\pwa-react-demo1\\src\\index.js",[],["39","40"],"C:\\Sandeep\\sapient_workspace\\pwa-react-demo1\\src\\App.js",[],"C:\\Sandeep\\sapient_workspace\\pwa-react-demo1\\src\\api\\fetchWeather.js",[],"C:\\Sandeep\\sapient_workspace\\pwa-react-demo-with-express-api\\src\\index.js",[],[],"C:\\Sandeep\\sapient_workspace\\pwa-react-demo-with-express-api\\src\\App.js",[],"C:\\Sandeep\\sapient_workspace\\pwa-react-demo-with-express-api\\src\\components\\About.js",[],"C:\\Sandeep\\sapient_workspace\\pwa-react-demo-with-express-api\\src\\components\\Home.js",[],[],"C:\\Sandeep\\sapient_workspace\\pwa-react-demo-with-express-api\\src\\components\\Users.js",["41"],"import React, { useState, useEffect } from 'react';\nimport { Table } from 'react-bootstrap';\nimport Skeleton from 'react-loading-skeleton';\n\nexport default function Users() {\n    const [usersData, setUsersData] = useState([]);\n\n    useEffect(() => {\n        //let url = \"https://jsonplaceholder.typicode.com/users\";\n        let url = \"https://sandeep49g-express-api-demo.netlify.app/.netlify/functions/api/users\";\n\n        fetch(url).then((response) => {\n            response.json().then((result) => {\n                if (result && result.users) {\n                    setUsersData(result.users);\n                }\n                //localStorage.setItem(\"users\", JSON.stringify(result));\n            });\n        }).catch(err => {\n            // setMode('offline');\n            // let collection = localStorage.getItem('users');\n            // setUsersData(JSON.parse(collection));\n        });\n    }, []);\n\n    return (\n        <div className=\"users-list\">\n            {\n                (usersData && usersData.length) ? (\n                    <Table striped hover responsive variant=\"light\">\n                        <thead>\n                            <tr>\n                                <th>Id</th>\n                                <th>Name</th>\n                                <th>Email</th>\n                                <th>Address</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                usersData.map((userInfo) => (\n                                    <tr key={userInfo.id}>\n                                        <td>{userInfo.id}</td>\n                                        <td>{userInfo.name}</td>\n                                        <td>{userInfo.email}</td>\n                                        <td>{userInfo.address.street}</td>\n                                    </tr>\n                                ))\n                            }\n                        </tbody>\n                    </Table>\n                ) : (\n                    <Skeleton height={50} count={10} duration={2} />\n                )\n            }\n        </div>\n    )\n}",{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":29,"column":17,"nodeType":"48","endLine":54,"endColumn":18},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"jsx-control-statements/jsx-use-if-tag","Ternary operator used. Use 'If' tag instead.","ConditionalExpression","no-global-assign","no-unsafe-negation"]